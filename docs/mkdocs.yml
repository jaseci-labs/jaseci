site_name: The Jac Programming Language and Jaseci Stack
site_url: https://jac-lang.org
repo_url: https://github.com/Jaseci-Labs/jaseci
edit_uri: edit/main/docs/docs
use_directory_urls: true
nav:
  - Learn:
    - Getting Started: "learn/getting_started.md"
    - Tour of Jac/Jaseci: "learn/introduction.md"
    - Jac in a Flash: "learn/jac_in_a_flash.md"
    - End-to-End Examples:
      - LittleX (your own twitter):
        - "learn/examples/littleX/overview.md"
        - "learn/examples/littleX/tutorial.md"
        - "learn/examples/littleX/quickstart.md"
      - RAG-based Conversational Chatbot:
        - "learn/examples/rag_chatbot/readme.md"
        - "learn/examples/rag_chatbot/1_setting-up-jac-cloud.md"
        - "learn/examples/rag_chatbot/2_building-a-rag-chatbot.md"
        - "learn/examples/rag_chatbot/3_rag-dialogue-routing-chatbot.md"
      - AI driven Applications:
        - "learn/examples/mtp_examples/rpg_game.md"
        - "learn/examples/mtp_examples/fantasy_trading_game.md"
    - Learn Jac Language:
      - Coding Manual: "learn/jac_coding_manual.md"
      - Language Reference: "learn/jac_ref.md"
      - Understanding Data Spatial:
        - "learn/data_spatial/nodes_and_edges.md" # Introduction to DS primitives
        - "learn/data_spatial/walkers.md" # Walker
        - "learn/data_spatial/filtering.md" # Filtering
        - "learn/data_spatial/sequence.md"
        - Theoretical Principles: "learn/dspfoundation.md" # DSP Foundation
        - Quick FAQ: "learn/data_spatial/FAQ.md" # faq
    - Jac Cloud Guide:
      - "learn/jac-cloud/introduction.md"
      - "learn/jac-cloud/quickstart.md"
      - Core Features:
        - "learn/jac-cloud/permission.md"
        - "learn/jac-cloud/logging.md"
        - "learn/jac-cloud/env_vars.md"
      - Real-time & Async:
        - "learn/jac-cloud/websocket.md"
        - "learn/jac-cloud/scheduler.md"
        - "learn/jac-cloud/async_walker.md"
        - "learn/jac-cloud/webhook.md"
      - Operations:
        - "learn/jac-cloud/deployment.md"
    - Jac LLM Integration Guides:
        - "learn/jac-mtllm/with_llm.md"
        - Quick Start Guide: "learn/jac-mtllm/quickstart.md"
        - Models: "learn/jac-mtllm/model_declaration.md"
        - Usage of MTP: "learn/jac-mtllm/usage.md"
        - Using Multimodal models: "learn/jac-mtllm/multimodality.md"
        - Bring your own LM: "learn/jac-mtllm/create_own_lm.md"
        - Python MTLLM Interface: "learn/jac-mtllm/python_integration.md"
    - Tooling:
      - "learn/tools/cli.md"



  - Internals:
    - Contributing: "internals/contrib.md"
    - Design Docs and Guides:
      - Compiler/Runtime Design: "internals/internals.md"
      - Static Compilation:
        - Sym Table Design Docs:
          - "internals/symbol_tables/index.md"
          - "internals/symbol_tables/structure.md"
          - "internals/symbol_tables/building.md"
          - "internals/symbol_tables/def_use.md"
          - "internals/symbol_tables/linking.md"
          - "internals/symbol_tables/resolution.md"
        - UniIR Nodes: "internals/uniir_node.md"
      - Runtime Plugin Interface: "internals/jac_plugins.md"
    - Planning Specs and Docs:
      - Language Ref Roadmap: "internals/planning_specs/ref_roadmap.md"
      - Error System: "internals/planning_specs/error_system.md"
      - Formatter System: "internals/planning_specs/formatter_system.md"
      - Concurrency: "internals/planning_specs/concurrency_model.md"
      - Native Type System:
        - Introduction: "internals/planning_specs/native_type_system/index.md"
        - Architecture: "internals/planning_specs/native_type_system/architecture.md"
        - Type Representation: "internals/planning_specs/native_type_system/type_representation.md"
        - Type Resolution: "internals/planning_specs/native_type_system/type_resolution.md"
        - Type Rules: "internals/planning_specs/native_type_system/type_rules.md"
        - Type Inference: "internals/planning_specs/native_type_system/type_inference.md"
        - Compiler Integration: "internals/planning_specs/native_type_system/compiler_integration.md"
        - Let's Build: "internals/planning_specs/native_type_system/lets_build.md"

  - Community Hub:
    - Roadmap: "communityhub/roadmap.md"
    - Release Notes: "communityhub/release_notes.md"
    - Breaking Changes: "communityhub/breaking_changes.md"
    - Fun Stuff:
      - Project Ideas:
        - "communityhub/fun/projects.md"
        - "communityhub/fun/p1.md"
        - "communityhub/fun/p2.md"
        - "communityhub/fun/p3.md"

  - Jac Playground:
    - Playground: "playground/index.html"

theme:
  logo: "assets/logo.png"
  name: "material"
  palette:
    scheme: "slate"
    primary: "black"
    accent: "orange"
  font:
    text: "Roboto"
    code: "Roboto Mono"
  features:
    - content.code.copy
    - content.action.edit
    - content.action.view
    - navigation.instant: false
    - navigation.tracking
    - navigation.tabs
    - navigation.path
    - navigation.footer
    # - navigation.expand
    # - navigation.sections
    - navigation.top
  icon:
    admonition:
      note: octicons/tag-16
      abstract: octicons/checklist-16
      info: octicons/info-16
      tip: material/fire
      success: octicons/check-16
      question: octicons/question-16
      warning: octicons/alert-16
      failure: octicons/x-circle-16
      danger: octicons/zap-16
      bug: octicons/bug-16
      example: octicons/beaker-16
      quote: octicons/quote-16

markdown_extensions:
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
      pygments_style: "autumn"
  - pymdownx.inlinehilite
  - pymdownx.snippets:
      base_path: [".", "../"]
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.arithmatex:
      generic: true
  - attr_list
  - md_in_html
  - attr_list
  - admonition
  - pymdownx.details
  - pymdownx.superfences
  - tables
  - toc:
        permalink: "#"


extra_css:
  - extra.css

extra:
  generator: false
  social:
    - icon: fontawesome/brands/mastodon
      link: https://fosstodon.org/@squidfunk
copyright: Copyright &copy; 2023 - 2024 Jac Hackers Everwhere

extra_javascript:
  - assets/mathjax-config.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://cdn.jsdelivr.net/pyodide/v0.27.0/full/pyodide.js
  - https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.js
  - https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.52.2/min/vs/loader.min.js
  - js/jac.monarch.js
  - js/run-code.js

plugins:
  - search
  - open-in-new-tab
  - mkdocs-video:
      is_video: True
      video_autoplay: True
      # video_loop: True
      video_controls: False
  - mkdocs-simple-hooks:
      hooks:
        on_pre_build: scripts.handle_jac_compile_data:pre_build_hook
