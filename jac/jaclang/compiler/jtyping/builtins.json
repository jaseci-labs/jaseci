{
    "builtins.int": {
        "methods": {
            // A special handling is added in the compiler it self to make the binary operations
            // on float and int results in float not int
            // This special handling should goaway once function overloading is supported
            "__add__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__sub__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__mul__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__truediv__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__floordiv__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__mod__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__pow__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__eq__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__lt__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__le__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__gt__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__ge__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"}
        },
        "assignable_from": ["builtins.int"]
    },
    "builtins.float": {
        "methods": {
            "__add__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__sub__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__mul__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__truediv__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__floordiv__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.int"},
            "__mod__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__pow__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.float"},
            "__eq__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__lt__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__le__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__gt__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__ge__": {"args": [["builtins.int", "builtins.float"]], "return": "builtins.bool"},
            "__round__": {"args": [], "return": "builtins.int"}
        },
        "assignable_from": ["builtins.int", "builtins.float"]
    },
    "builtins.str": {
        "methods": {
            "__add__": {"args": ["builtins.str"], "return": "builtins.str"},
            "__contains__": {"args": ["builtins.str"], "return": "builtins.bool"},
            "__eq__": {"args": ["builtins.str"], "return": "builtins.bool"},
            "upper": {"args": [], "return": "builtins.str"},
            "lower": {"args": [], "return": "builtins.str"},
            "builtins.strip": {"args": [], "return": "builtins.str"},
            // "split": {"args": [], "return": "list[builtins.str]"},
            // "join": {"args": [["list[builtins.str]"]], "return": "builtins.str"},
            "replace": {"args": ["builtins.str", "builtins.str"], "return": "builtins.str"},
            "find": {"args": ["builtins.str"], "return": "builtins.int"}
            // "format": {"args": ["..."], "return": "builtins.str"}
        },
        "assignable_from": ["builtins.builtins.str"]
    },
    "builtins.bool": {
        "methods": {
            "__and__": {"args": ["builtins.bool"], "return": "builtins.bool"},
            "__or__": {"args": ["builtins.bool"], "return": "builtins.bool"},
            "__invert__": {"args": [], "return": "builtins.bool"},
            "__eq__": {"args": ["builtins.bool"], "return": "builtins.bool"}
        },
        "assignable_from": ["builtins.bool"]
    },
    "builtins.list": {
        "generics": ["T"],
        "assignable_from": ["builtins.list"],
        "methods": {
            "append": {"args": ["T"], "return": ""},
            // "extend": {"args": ["builtins.list[T]"], "return": ""},
            "insert": {"args": ["builtins.int", "T"], "return": ""},
            "remove": {"args": ["T"], "return": ""},
            "pop": {"args": [], "return": "T"},
            "clear": {"args": [], "return": ""},
            "index": {"args": ["T"], "return": "builtins.int"},
            "count": {"args": ["T"], "return": "builtins.int"},
            "reverse": {"args": [], "return": ""},
            "sort": {"args": [], "return": ""},
            // "copy": {"args": [], "return": "builtins.list[T]"},
            "__getitem__": {"args": ["builtins.int"], "return": "T"},
            "__setitem__": {"args": ["builtins.int", "T"], "return": ""},
            "__delitem__": {"args": ["builtins.int"], "return": ""},
            "__len__": {"args": [], "return": "builtins.int"},
            // "__iter__": {"args": [], "return": "builtins.iterator[T]"},
            "__contains__": {"args": ["T"], "return": "builtins.bool"}
        }
    },
    "builtins.dict": {
        "generics": ["K", "V"],
        "assignable_from": ["builtins.dict"],
        "methods": {
            "get": {"args": ["K"], "return": "V"},
            "pop": {"args": ["K"], "return": "V"},
            // "popitem": {"args": [], "return": "builtins.tuple[K, V]"},
            // "keys": {"args": [], "return": "builtins.list[K]"},
            // "values": {"args": [], "return": "builtins.list[V]"},
            // "items": {"args": [], "return": "builtins.list[builtins.tuple[K, V]]"},
            // "update": {"args": ["builtins.dict[K, V]"], "return": ""},
            "clear": {"args": [], "return": ""},
            // "copy": {"args": [], "return": "builtins.dict[K, V]"},
            "setdefault": {"args": ["K", "V"], "return": "V"},
            "__getitem__": {"args": ["K"], "return": "V"},
            "__setitem__": {"args": ["K", "V"], "return": ""},
            "__delitem__": {"args": ["K"], "return": ""},
            "__contains__": {"args": ["K"], "return": "builtins.bool"},
            // "__iter__": {"args": [], "return": "builtins.iterator[K]"},
            "__len__": {"args": [], "return": "builtins.int"}
        }
    }
}
